definitions:
  steps:
    - step: &deploy-to-test-server
        name: Deploy to test server
        image: kloose/maven3-jdk13-gsdk:latest
        script:
#          - yum -y install openssh-clients
          - source /tools/google-cloud-sdk/path.bash.inc
          - echo $GCLOUD_API_KEYFILE | base64 -d > ./gcloud-api-key.json
          - gcloud auth activate-service-account --key-file gcloud-api-key.json
          - gcloud config set project $GCLOUD_PROJECT
          #          - gcloud beta compute ssh --zone "asia-east2-a" "mpl-test-1" --project "mpl-test-272715" --command '/mpl/mpl-infrastructure/gce/bounce_services.sh'
          - ssh -o StrictHostKeyChecking=no kloose@uat-api.masonprivatbank.cloud /mpl/mpl-infrastructure/gce/bounce_admin_ui.sh

pipelines:
  default:
    - step:
        name: Compile application with production optimizations
        image: node:10.15.3
        size: 1x
        caches:
          - node
#        services:
#          - docker
        script: # Modify the commands below to build your repository.
          - echo "$(ls -la)"
#          - >
#            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
#              sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' && \
#              apt-get update && \
#              apt-get install -y google-chrome-stable xvfb procps
          - npm install -g @angular/cli
          - npm install
#          - npm run test:ci
#          - npm run e2e:ci
#          - pipe: sonarsource/sonarcloud-scan:1.0.1
#          - pipe: sonarsource/sonarcloud-quality-gate:0.1.3
          - npm run build:prod
        artifacts:
          - dist/**
    - step:
        name: Create docker container and push to repository
        services:
          - docker
        image: kloose/maven3-jdk13-gsdk:latest
        script:
          - export IMAGE_NAME=asia.gcr.io/$GCLOUD_PROJECT/mpl-nomad-admin-ui
          - docker build -t $IMAGE_NAME:$BITBUCKET_COMMIT -t $IMAGE_NAME:latest .
          - mkdir -p ~/.docker
          - echo $DOCKER_CONFIG_FILE | base64 -d > ~/.docker/config.json
          - echo $GCLOUD_API_KEYFILE | base64 -d > ./gcloud-api-key.json
          - source /tools/google-cloud-sdk/path.bash.inc
          - gcloud auth activate-service-account --key-file gcloud-api-key.json
          - gcloud config set project $GCLOUD_PROJECT
          - docker push $IMAGE_NAME
    - step: *deploy-to-test-server

